#!/bin/bash
#
# slice_time_correct input tr direction ascending interleave
#
# input:      input prefix
# tr:         acquisition TR in seconds [float]
# direction:  acquisition direction [list: x y z]
# ascending:  ascending slice acquisition order? [list: yes no]
# interleave: acquisition was interleaved [list: yes no]
#
# output: func_tshift
# prereq: init_*
#
# This performs slice time correction using the supplied slice timing pattern.

echo '*** MODULE: slice_time_correct. Corrects slice timing. *****************'
export input=${1}
export tr_sec=${2}
export direction=${3}
export ascending=${4}
export interleave=${5}

if [ ${ascending} = 'no' ]; then
    ascending='--down'
else
    ascending=''
fi

if [ ${interleave} = 'yes' ]; then
    interleave='--odd'
else
    interleave=''
fi

if [ ${direction} = 'x' ]; then
    direction=1
elif [ ${direction} = 'y' ]; then
    direction=2
else
    direction=3
fi

# loop through sessions
DIR_SESS=$(ls -d -- ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}/*/)
for SESS in ${DIR_SESS}; do

    # loop through runs
    DIR_RUNS=`ls -d -- ${SESS}/RUN*`
    for RUN in ${DIR_RUNS}; do
        NUM=`basename ${RUN} | sed 's/[^0-9]//g'`

        # slice time correction (can include specified timings)
        # NB: Physio regression must happen BEFORE NOW
        if [ ! -f ${SESS}/func_tshift.${ID}.${NUM}.nii.gz ]; then
            if [ -f ${RUN}/slice_timing.1D ]; then
                slicetimer \
                    -i ${SESS}/${input}.${ID}.${NUM}.nii.gz \
                    -o ${SESS}/func_tshift.${ID}.${NUM}.nii.gz \
                    --ocustom @ ${RUN}/slice_timing.1D
            else
                slicetimer \
                    -i ${SESS}/${input}.${ID}.${NUM}.nii.gz \
                    -o ${SESS}/func_tshift.${ID}.${NUM}.nii.gz \
                    -r ${tr_sec} -d ${direction} ${ascending} ${interleave}
            fi
        fi
    done
done

