#!/bin/bash
#
# init_basic data_quality del
#
# data_quality: 'low' for poor internal contrast, otherwise 'high'. [list: low high]
# del:          number of TRs to remove from the beginning of the run. [int]
#
# output: func_del
# others: phys
# prereq:
#
# Works from the raw data in each RUN folder, and prepares the data for the rest of epitome. This is the most basic form of initialization, which:
#
# + Orients data to RAI
# + Regresses physiological noise using McRetroTS
# + Deletes initial time points (optionally, set to 0 to skip)
#
# To use physiological noise regression, you must have a *.phys (respiration) and *.card (cardiac) file in each RUN folder. This module will automatically perform noise regression if these are available.
#
# For those sites with a BioPak system, epi-physio can parse the outputs to create these *.phys and *.card files.

# sets some handy AFNI defaults
export AFNI_NIFTI_TYPE_WARN='NO'
export AFNI_DECONFLICT=OVERWRITE

# used for McRetroTS

# variable used to keep track of the current 'space' of the functional data
# space = 'native', 'T1', 'MNI'
export space='native'

echo '*** MODULE: init_basic. Reorients, phys regression, removes init TRs. ***'
export data_quality=${1}
export del=${2}

# loop through sessions
for SESS in $(ls -d -- ${DIR_DATA}/${DIR_EXPT}/${SUB}/${DATA_TYPE}/*/); do

    # make the output folder for the paramaters
    if [ ! -d ${SESS}/PARAMS ]; then
        mkdir ${SESS}/PARAMS
    fi

    # loop through runs
    RUNS=$(find ${SESS} -type d -name 'RUN*' | sort)
    for RUN in ${RUNS}; do
        NUM=$(basename ${RUN} | sed 's/[^0-9]//g')
        input=$(echo ${SESS}/RUN${NUM}/*.nii*)
        runfolder=$(echo ${SESS}/RUN${NUM}/)

        if [ ! -f ${SESS}/func_del.${ID}.${NUM}.nii.gz ]; then
           # ensure all data is in RAI
           fslreorient2std \
               ${input} \
               ${SESS}/func_tmp_RAI.${ID}.${NUM}.nii.gz

            # retain 1st TR from 1st run (prestabilization)
            if [ ${data_quality} = 'low' ] && [ ${NUM} = 01 ]; then
                3dcalc \
                    -prefix ${SESS}/anat_EPI_initTR.nii.gz \
                    -a ${SESS}/func_tmp_RAI.${ID}.${NUM}.nii.gz[0] \
                    -expr 'a'
            fi

            # Generate physiological noise regressors if they exist
            if [ -f ${runfolder}/resp.*.phys ] && [ -f ${runfolder}/card.*.phys ]; then

                # get dimension info from input file
                x=$(fslhd ${input}     | sed -n 6p  | cut -c 5-)
                y=$(fslhd ${input}     | sed -n 7p  | cut -c 5-)
                z=$(fslhd ${input}     | sed -n 8p  | cut -c 5-)
                ntrs=$(fslhd ${input}  | sed -n 9p  | cut -c 5-)
                tr=$(fslhd ${input}    | sed -n 22p | cut -c 9-)
                units=$(fslhd ${input} | sed -n 14p | cut -c 11- | xargs)

                # find the smallest dimension in x, y, z
                xyz=($x $y $z)
                slice=$(echo ${xyz[*]} | python -c "print sorted(map(int, raw_input().split(' ')))[0]")

                # get the number of samples in physio logs
                samp=$(cat ${runfolder}/resp.*.phys | wc -w)

                # convert ms to s to hz
                if [ ${units} = 's' ]; then
                    time=$(perl -e "print ${ntrs} * ${tr}")
                elif [ ${units} = 'ms' ]; then
                    time=$(perl -e "print ${ntrs} * ${tr} / 1000")
                fi
                fs=$(perl -e "print ${samp} / ${time}")

                # Run McRetroTS -- Respfile Cardfile VolTR Nslices PhysFS Graph
                # NB! Right now we are NOT using the slice-wise information,
                # as the slice-wise information assumes alternating+Z! Jeesh!
                ${McRetroTS} \
                    ${runfolder}/resp.*.phys ${runfolder}/card.*.phys ${tr} ${slice} ${fs} 0

                # Output both the single-slice and multi-slice data
                1dcat \
                    oba.slibase.1D[0..12]{${del}..$} > ${SESS}/PARAMS/phys.${ID}.${NUM}.1D

                1dcat \
                    oba.slibase.1D[0..$]{${del}..$} > ${SESS}/PARAMS/phys_slicewise.${ID}.${NUM}.1D
                rm oba.slibase*
            fi

            # delete initial time points
            3dcalc \
                -prefix ${SESS}/func_del.${ID}.${NUM}.nii.gz \
                -a "${SESS}/func_tmp_RAI.${ID}.${NUM}.nii.gz[${del}..$]" \
                -expr 'a'
            rm ${SESS}/func_tmp_*
        fi
    done
done
